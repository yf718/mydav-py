name: Build Nuitka ARM64 musl

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-arm64-musl:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # 1. 设置 QEMU，让 x86_64 Runner 能跑 arm64 容器
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      # 2. 用 Alpine arm64 容器编译 (musl libc)
      - name: Build with Nuitka on Alpine (musl, arm64)
        run: |
          docker run --rm --platform=linux/arm64 \
            -v "$PWD":/src -w /src \
            alpine:3.20 sh -c "
              set -e
              apk add --no-cache \
                python3 python3-dev py3-pip \
                gcc g++ musl musl-dev binutils patchelf make
              python3 -m ensurepip
              pip3 install -U pip setuptools wheel
              pip3 install -r requirements.txt || true
              pip3 install nuitka
              nuitka --standalone --onefile --output-dir=dist --static-libpython=no --remove-output ad.py
              nuitka --standalone --onefile --output-dir=dist --static-libpython=no --remove-output down_aria2.py
            "

      # 3. 上传产物
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: arm64-musl-binaries
          path: dist/*
