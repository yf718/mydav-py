name: Build ARM64 Musl Python Binaries

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU (for ARM64)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build with Alpine ARM64
        run: |
          docker run --rm --platform=linux/arm64 \
            -v "$PWD":/src -w /src \
            alpine:3.19 sh -c "
              set -e
              apk add --no-cache \
                python3 py3-pip py3-virtualenv py3-dev \
                gcc g++ musl musl-dev binutils patchelf make \
                curl

              # 创建虚拟环境
              python3 -m venv venv
              . venv/bin/activate

              # 安装依赖
              pip install -U pip setuptools wheel
              pip install -r requirements.txt || true
              pip install nuitka

              # 编译成独立二进制 (musl)
              venv/bin/nuitka --standalone --onefile --output-dir=dist \
                --static-libpython=no --remove-output ad.py

              venv/bin/nuitka --standalone --onefile --output-dir=dist \
                --static-libpython=no --remove-output down_aria2.py
            "

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-arm64
          path: dist/*
