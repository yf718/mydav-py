name: Build with Nuitka (musl-compatible, Alpine)

on:
  workflow_dispatch:
    inputs:
        ref:
            type: string
            description: 'Git ref from which to release'
            required: true
            default: 'main'

jobs:
  build-musl:
    runs-on: ubuntu-latest
    name: Build ${{ matrix.platform }} on python:3.10-alpine for musl
    strategy:
      matrix:
        include:
          - runs_on: ubuntu-24.04-arm
            platform: arm64
            python_url: https://github.com/astral-sh/python-build-standalone/releases/download/20250828/cpython-3.10.18+20250828-x86_64-unknown-linux-musl-install_only_stripped.tar.gz
          - runs_on: ubuntu-24.04
            platform: x64
            python_url: https://github.com/astral-sh/python-build-standalone/releases/download/20250828/cpython-3.10.18+20250828-x86_64-unknown-linux-musl-install_only.tar.gz
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system deps
        run: |
          sudo apt update
          sudo apt install -y gcc g++ make patchelf libffi-dev tar

      - name: Download musl-native Python 3.10
        run: |
          wget -O python-musl.tar.gz ${{ matrix.python_url }}
          mkdir -p python-musl
          tar -xzf python-musl.tar.gz -C python-musl --strip-components=1

      - name: Build
        run: |
           docker run --rm \
            -v "$PWD":/src -w /src \
             alpine:latest sh -c "
               apk add --no-cache binutils curl patchelf gcc g++ musl-dev &&
              ./python-musl/bin/python3 -m ensurepip &&
              ./python-musl/bin/pip3 install -U pip setuptools wheel &&
              ./python-musl/bin/pip3 install -r requirements.txt &&
              ./python-musl/bin/pip3 install nuitka &&
              ./python-musl/bin/nuitka --standalone --onefile --output-dir=dist --nofollow-import-to=numpy --remove-output ad.py &&
              ./python-musl/bin/nuitka --standalone --onefile --output-dir=dist --nofollow-import-to=numpy --remove-output down_aria2.py
            "
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-musl
          path: dist/
  
  # build-arm64-musl:
  #   name: Build arm64 (musl/Alpine)
  #   runs-on: ubuntu-22.04-arm
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Build with Docker (Alpine)
  #       run: |
  #         docker run --rm \
  #           -v "$PWD":/src -w /src \
  #           python:3.10-alpine sh -c "
  #             apk add --no-cache binutils curl patchelf gcc g++ musl-dev &&
  #             pip install -r requirements.txt &&
  #             pip install nuitka &&
  #             nuitka --standalone --onefile --output-dir=dist --nofollow-import-to=numpy --remove-output ad.py &&
  #             nuitka --standalone --onefile --output-dir=dist --nofollow-import-to=numpy --remove-output down_aria2.py
  #           "

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: arm64-alpine
  #         path: dist/
