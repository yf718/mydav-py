name: Build Nuitka Binary for OpenWrt aarch64-musl

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build arm64 (musl/Alpine)
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            wget tar xz-utils make libssl-dev zlib1g-dev

      - name: Download and compile Python for musl
        run: |
          # 创建工作目录
          mkdir -p python-build
          cd python-build
          
          # 下载Python源码
          wget https://www.python.org/ftp/python/3.10.18/Python-3.10.18.tgz
          tar -xzf Python-3.10.18.tgz
          cd Python-3.10.18
          
          # 配置musl交叉编译选项，启用静态链接
          ./configure \
            --prefix=/usr/local/python-musl \
            --host=aarch64-linux-musl \
            --build=x86_64-linux-gnu \
            --enable-optimizations \
            --with-lto \
            --disable-shared \
            --enable-static \
            --without-ensurepip \
            CFLAGS="-Os -static -fPIC" \
            LDFLAGS="-static"
          
          # 编译并安装
          make -j$(nproc)
          make install DESTDIR=$(pwd)/../install
          
          # 复制到工作目录
          cd ../../
          cp -r python-build/install/usr/local/python-musl ./python-musl

      - name: Build with Docker (Alpine)
        run: |
          docker run --rm \
            -v "$PWD":/src -w /src \
            alpine:latest sh -c "
              apk add --no-cache binutils curl patchelf gcc musl-dev aarch64-linux-musl-gcc &&
              # 安装pip
              ./python-musl/bin/python3 -m ensurepip --default-pip &&
              # 安装依赖
              ./python-musl/bin/pip3 install -r requirements.txt &&
              ./python-musl/bin/pip3 install nuitka &&
              # 使用静态编译的Python进行Nuitka打包
              CC=aarch64-linux-musl-gcc ./python-musl/bin/nuitka \
                --standalone \
                --onefile \
                --static-libpython=yes \
                --output-dir=dist \
                --nofollow-import-to=numpy \
                --remove-output \
                down_aria2.py
            "

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: arm64-alpine
          path: dist/
    
