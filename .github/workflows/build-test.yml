name: Build Python binary test2

on:
  workflow_dispatch:

jobs:
  build-python:
    runs-on: ubuntu-latest
    name: Build static musl Python (aarch64)

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install musl-cross-make
        run: |
          sudo apt update
          sudo apt install -y make gcc g++ git wget tar
          git clone https://github.com/richfelker/musl-cross-make.git
          cd musl-cross-make
          echo "TARGET = aarch64-linux-musl" > config.mak
          echo "OUTPUT = $PWD/output" >> config.mak
          make -j$(nproc)

      - name: Build Python 3.10 (static)
        run: |
          MUSL_PREFIX=$PWD/musl-cross-make/output
          export PATH="$MUSL_PREFIX/bin:$PATH"

          wget https://www.python.org/ftp/python/3.10.13/Python-3.10.13.tgz
          tar -xf Python-3.10.13.tgz
          cd Python-3.10.13

          export CC=aarch64-linux-musl-gcc
          export CXX=aarch64-linux-musl-g++
          export AR=aarch64-linux-musl-ar
          export RANLIB=aarch64-linux-musl-ranlib

          ./configure \
            --host=aarch64-linux-musl \
            --build=$(uname -m)-linux-gnu \
            --prefix=/opt/python-musl \
            --enable-optimizations \
            --with-ensurepip=install \
            CFLAGS="-static" \
            LDFLAGS="-static"

          make -j$(nproc)
          make install

      - name: Package Python
        run: |
          tar -czf python-musl-aarch64.tar.gz -C /opt python-musl

      - name: Upload Python
        uses: actions/upload-artifact@v4
        with:
          name: python-musl-aarch64
          path: python-musl-aarch64.tar.gz

  build-binary:
    runs-on: ubuntu-latest
    name: Build Nuitka binary using static Python
    needs: build-python

    container: alpine:3.20

    steps:
      - name: Install dependencies
        run: |
          apk add --no-cache bash wget tar g++ make musl-dev build-base patchelf python3 py3-pip

      - name: Download Python artifact
        uses: actions/download-artifact@v4
        with:
          name: python-musl-aarch64
          path: ./python-dist

      - name: Extract Python
        run: |
          tar -xzf ./python-dist/python-musl-aarch64.tar.gz -C /opt
          ln -s /opt/python-musl/bin/python3 /usr/local/bin/python3

      - name: Install Nuitka
        run: |
          python3 -m ensurepip
          python3 -m pip install -U pip wheel setuptools
          python3 -m pip install -U nuitka

      - name: Write test.py
        run: |
          echo 'print("Hello from static Nuitka binary!")' > test.py

      - name: Compile with Nuitka
        run: |
          nuitka test.py --standalone --static-libpython=yes --nofollow-imports --output-dir=output
          mv output/test.bin output/test-musl.bin

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: test-musl-bin
          path: output/test-musl.bin
